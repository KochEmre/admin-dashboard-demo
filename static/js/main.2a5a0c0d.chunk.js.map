{"version":3,"sources":["reportWebVitals.js","redux/reducers/ThemeReducer.js","redux/reducers/index.js","assets/images/logo.png","assets/images/logo_white.png","components/sidebar/Sidebar.jsx","components/dropdown/Dropdown.jsx","redux/actions/ThemeAction.js","components/thememenu/ThemeMenu.jsx","assets/images/me.png","components/topnav/TopNav.jsx","components/status-card/StatusCard.jsx","components/table/Table.jsx","components/badge/Badge.jsx","pages/Dashboard.jsx","pages/Customers.jsx","components/Routes.jsx","components/layout/Layout.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeReducer","state","action","type","mode","payload","color","rootReducer","combineReducers","SidebarItem","props","active","className","icon","title","Sidebar","themeReducer","useSelector","activeItem","sidebar_items","findIndex","item","route","location","pathname","src","logo_white","logo","alt","map","index","to","display_name","Dropdown","content_ref","toggle_ref","dropdown_toggle_el","useRef","dropdown_content_el","document","addEventListener","e","current","contains","target","classList","toggle","remove","ref","badge","customToggle","contentData","renderItems","renderFooter","exportDefault","setColor","setMode","getTheme","mode_settings","id","name","background","class","color_settings","ThemeMenu","menu_ref","menu_toggle_ref","useState","currMode","setcurrMode","currColor","setcurrColor","dispatch","useDispatch","useEffect","themeClass","find","localStorage","getItem","colorClass","undefined","onClick","add","setItem","ThemeAction","curr_user","image","user_image","Topnav","placeholder","user","user_menu","content","renderUserMenu","notifications","renderNotificationItem","StatusCard","count","Table","initDataShow","limit","bodyData","slice","Number","dataShow","setDataShow","pages","range","page","Math","floor","length","Array","keys","currPage","setCurrPage","headData","renderHead","renderBody","start","end","selectPage","Badge","chartOptions","series","data","options","chart","dataLabels","enabled","stroke","curve","xaxis","categories","legend","position","grid","show","topCustomers","head","body","latestOrders","header","date","price","status","orderStatus","Dashboard","statusCards","theme","height","renderCusomerHead","username","order","renderCusomerBody","renderOrderHead","renderOrderBody","customerTableHead","Customers","customerList","email","phone","total_orders","total_spend","Routes","path","exact","component","Layout","render","TopNav","store","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2a5a0c0d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const ThemeReducer = (state = {}, action) => {\n    switch(action.type) {\n        case 'SET_MODE':\n            return {\n                ...state,\n                mode: action.payload\n            }\n        case 'SET_COLOR':\n            return {\n                ...state,\n                color: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default ThemeReducer","import ThemeReducer from \"./ThemeReducer\"\nimport { combineReducers } from \"redux\"\n\nconst rootReducer = combineReducers({ThemeReducer})\n\nexport default rootReducer","export default __webpack_public_path__ + \"static/media/logo.f49c96b9.png\";","export default __webpack_public_path__ + \"static/media/logo_white.2155ab4c.png\";","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport './sidebar.css'\n\nimport logo from '../../assets/images/logo.png'\nimport logo_white from '../../assets/images/logo_white.png'\n\nimport sidebar_items from '../../assets/JsonData/sidebar_routes.json'\n\nimport { useSelector } from 'react-redux'\n\nconst SidebarItem = props => {\n\n    const active = props.active ? 'active' : ''\n\n    return (\n        <div className=\"sidebar__item\">\n            <div className={`sidebar__item-inner ${active}`}>\n                <i className={props.icon}></i>\n                <span>\n                    {props.title}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nconst Sidebar = props => {\n    const themeReducer = useSelector(state => state.ThemeReducer)\n\n    const activeItem = sidebar_items.findIndex(item => item.route === props.location.pathname)\n\n    return (\n        <div className='sidebar'>\n            <div className=\"sidebar__logo\">\n                <img className=\"deneme\" src={themeReducer.mode === 'theme-mode-dark' ? logo_white:logo} alt=\"company logo\" />\n            </div>\n            {\n                sidebar_items.map((item, index) => (\n                    <Link to={item.route} key={index}>\n                        <SidebarItem\n                            title={item.display_name}\n                            icon={item.icon}\n                            active={index === activeItem}\n                        />\n                    </Link>\n                ))\n            }\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React, {useRef} from 'react'\n\nimport './dropdown.css'\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        // user click toggle\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active')\n        } else {\n            // user click outside toggle and content\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active')\n            }\n        }\n    })\n}\n\nconst Dropdown = props => {\n\n    const dropdown_toggle_el = useRef(null)\n    const dropdown_content_el = useRef(null)\n\n    clickOutsideRef(dropdown_content_el, dropdown_toggle_el)\n    \n    return (\n        <div className='dropdown'>\n            <button ref={dropdown_toggle_el} className=\"dropdown__toggle\">\n                {\n                    props.icon ? <i className={props.icon}></i> : ''\n                }\n                {\n                    props.badge ? <span className='dropdown__toggle-badge'>{props.badge}</span> : ''\n                }\n                {\n                    props.customToggle ? props.customToggle() : ''\n                }\n            </button>\n            <div ref={dropdown_content_el} className=\"dropdown__content\">\n                {\n                    props.contentData && props.renderItems ? props.contentData.map((item, index) => props.renderItems(item, index)) : ''\n                }\n                {\n                    props.renderFooter ? (\n                        <div className=\"dropdown__footer\">\n                            {props.renderFooter()}\n                        </div>\n                    ) : ''\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Dropdown\n","const setMode = mode => {\n    return {\n        type: 'SET_MODE',\n        payload: mode\n    }\n}\n\nconst setColor = color => {\n    return {\n        type: 'SET_COLOR',\n        payload: color\n    }\n}\n\nconst getTheme = () => {\n    return {\n        type: 'GET_THEME'\n    }\n}\n\nconst exportDefault = {\n    setColor,\n    setMode,\n    getTheme\n}\n\nexport default exportDefault","import React, {useRef, useState, useEffect} from 'react'\n\nimport './thememenu.css'\n\nimport { useDispatch } from 'react-redux'\n\nimport ThemeAction from '../../redux/actions/ThemeAction'\n\nconst mode_settings = [\n    {\n        id: 'light',\n        name: 'Light',\n        background: 'light-background',\n        class: 'theme-mode-light'\n    },\n    {\n        id: 'dark',\n        name: 'Dark',\n        background: 'dark-background',\n        class: 'theme-mode-dark'\n    }\n]\n\nconst color_settings = [\n    {\n        id: 'blue',\n        name: 'Blue',\n        background: 'blue-color',\n        class: 'theme-color-blue'\n    },\n    {\n        id: 'red',\n        name: 'Red',\n        background: 'red-color',\n        class: 'theme-color-red'\n    },\n    {\n        id: 'cyan',\n        name: 'Cyan',\n        background: 'cyan-color',\n        class: 'theme-color-cyan'\n    },\n    {\n        id: 'green',\n        name: 'Green',\n        background: 'green-color',\n        class: 'theme-color-green'\n    },\n    {\n        id: 'orange',\n        name: 'Orange',\n        background: 'orange-color',\n        class: 'theme-color-orange'\n    },\n]\n\nconst clickOutsideRef = (content_ref, toggle_ref) => {\n    document.addEventListener('mousedown', (e) => {\n        // user click toggle\n        if (toggle_ref.current && toggle_ref.current.contains(e.target)) {\n            content_ref.current.classList.toggle('active')\n        } else {\n            // user click outside toggle and content\n            if (content_ref.current && !content_ref.current.contains(e.target)) {\n                content_ref.current.classList.remove('active')\n            }\n        }\n    })\n}\n\nconst ThemeMenu = () => {\n\n    const menu_ref = useRef(null)\n    const menu_toggle_ref = useRef(null)\n\n    clickOutsideRef(menu_ref, menu_toggle_ref)\n\n    const setActiveMenu = () => menu_ref.current.classList.add('active')\n\n    const closeMenu = () => menu_ref.current.classList.remove('active')\n\n    const [currMode, setcurrMode] = useState('light')\n\n    const [currColor, setcurrColor] = useState('blue')\n\n    const dispatch = useDispatch()\n\n    const setMode = mode => {\n        setcurrMode(mode.id)\n        localStorage.setItem('themeMode', mode.class)\n        dispatch(ThemeAction.setMode(mode.class))\n    }\n\n    const setColor = color => {\n        setcurrColor(color.id)\n        localStorage.setItem('colorMode', color.class)\n        dispatch(ThemeAction.setColor(color.class))\n    }\n\n    useEffect(() => {\n        const themeClass = mode_settings.find(e => e.class === localStorage.getItem('themeMode', 'theme-mode-light'))\n\n        const colorClass = color_settings.find(e => e.class === localStorage.getItem('colorMode', 'theme-mode-light'))\n\n        if (themeClass !== undefined) setcurrMode(themeClass.id)\n\n        if (colorClass !== undefined) setcurrColor(colorClass.id)\n\n    }, []);\n\n    return (\n        <div>\n            <button ref={menu_toggle_ref} className=\"dropdown__toggle\" onClick={() => setActiveMenu()}>\n                <i className='bx bx-palette'></i>\n            </button>\n            <div ref={menu_ref} className=\"theme-menu\">\n                <h4>Theme settings</h4>\n                <button className=\"theme-menu__close\" onClick={() => closeMenu()}>\n                    <i className='bx bx-x'></i>\n                </button>\n                <div className=\"theme-menu__select\">\n                    <span>Choose mode</span>\n                    <ul className=\"mode-list\">\n                        {\n                            mode_settings.map((item, index) => (\n                                <li key={index} onClick={() => setMode(item)}>\n                                    <div className={`mode-list__color ${item.background} ${item.id === currMode ? 'active' : ''}`}>\n                                        <i className='bx bx-check'></i>\n                                    </div>\n                                    <span>{item.name}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n                <div className=\"theme-menu__select\">\n                    <span>Choose color</span>\n                    <ul className=\"mode-list\">\n                        {\n                            color_settings.map((item, index) => (\n                                <li key={index} onClick={() => setColor(item)}>\n                                    <div className={`mode-list__color ${item.background} ${item.id === currColor ? 'active' : ''}`}>\n                                        <i className='bx bx-check'></i>\n                                    </div>\n                                    <span>{item.name}</span>\n                                </li>\n                            ))\n                        }\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ThemeMenu\n","export default __webpack_public_path__ + \"static/media/me.4c92d637.png\";","import React from 'react'\n\nimport './topnav.css'\n\nimport { Link } from 'react-router-dom'\n\nimport Dropdown from '../dropdown/Dropdown'\n\nimport ThemeMenu from '../thememenu/ThemeMenu'\n\nimport notifications from '../../assets/JsonData/notification.json'\n\nimport user_image from '../../assets/images/me.png'\n\nimport user_menu from '../../assets/JsonData/user_menus.json'\n\nconst curr_user = {\n    display_name: 'Emre Koç',\n    image: user_image\n}\n\nconst renderNotificationItem = (item, index) => (\n    <div className=\"notification-item\" key={index}>\n        <i className={item.icon}></i>\n        <span>{item.content}</span>\n    </div>\n)\n\nconst renderUserToggle = (user) => (\n    <div className=\"topnav__right-user\">\n        <div className=\"topnav__right-user__image\">\n            <img src={user.image} alt=\"\" />\n        </div>\n        <div className=\"topnav__right-user__name\">\n            {user.display_name}\n        </div>\n    </div>\n)\n\nconst renderUserMenu =(item, index) => (\n    <Link to='/admin-dashboard-demo/' key={index}>\n        <div className=\"notification-item\">\n            <i className={item.icon}></i>\n            <span>{item.content}</span>\n        </div>\n    </Link>\n)\n\nconst Topnav = () => {\n    return (\n        <div className='topnav'>\n            <div className=\"topnav__search\">\n                <input type=\"text\" placeholder='Search here...' />\n                <i className='bx bx-search'></i>\n            </div>\n            <div className=\"topnav__right\">\n                <div className=\"topnav__right-item\">\n                    {/* dropdown here */}\n                    <Dropdown\n                        customToggle={() => renderUserToggle(curr_user)}\n                        contentData={user_menu}\n                        renderItems={(item, index) => renderUserMenu(item, index)}\n                    />\n                </div>\n                <div className=\"topnav__right-item\">\n                    <Dropdown\n                        icon='bx bx-bell'\n                        badge='12'\n                        contentData={notifications}\n                        renderItems={(item, index) => renderNotificationItem(item, index)}\n                        renderFooter={() => <Link to='/admin-dashboard-demo/'>View All</Link>}\n                    />\n                    {/* dropdown here */}\n                </div>\n                <div className=\"topnav__right-item\">\n                    <ThemeMenu/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Topnav\n","import React from 'react'\n\nimport './statuscard.css'\n\nconst StatusCard = props => {\n    return (\n        <div className='status-card'>\n            <div className=\"status-card__icon\">\n                <i className={props.icon}></i>\n            </div>\n            <div className=\"status-card__info\">\n                <h4>{props.count}</h4>\n                <span>{props.title}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default StatusCard\n","import React, {useState} from 'react'\n\nimport './table.css'\n\nconst Table = props => {\n\n    const initDataShow = props.limit && props.bodyData ? props.bodyData.slice(0, Number(props.limit)) : props.bodyData\n\n    const [dataShow, setDataShow] = useState(initDataShow)\n\n    let pages = 1\n\n    let range = []\n\n    if (props.limit !== undefined) {\n        let page = Math.floor(props.bodyData.length / Number(props.limit))\n        pages = props.bodyData.length % Number(props.limit) === 0 ? page : page + 1\n        range = [...Array(pages).keys()]\n    }\n\n    const [currPage, setCurrPage] = useState(0)\n\n    const selectPage = page => {\n        const start = Number(props.limit) * page\n        const end = start + Number(props.limit)\n\n        setDataShow(props.bodyData.slice(start, end))\n\n        setCurrPage(page)\n    }\n\n    return (\n        <div>\n            <div className=\"table-wrapper\">\n                <table>\n                    {\n                        props.headData && props.renderHead ? (\n                            <thead>\n                                <tr>\n                                    {\n                                        props.headData.map((item, index) => props.renderHead(item, index))\n                                    }\n                                </tr>\n                            </thead>\n                        ) : null\n                    }\n                    {\n                        props.bodyData && props.renderBody ? (\n                            <tbody>\n                                {\n                                    dataShow.map((item, index) => props.renderBody(item, index))\n                                }\n                            </tbody>\n                        ) : null\n                    }\n                </table>\n            </div>\n            {\n                pages > 1 ? (\n                    <div className=\"table__pagination\">\n                        {\n                            range.map((item, index) => (\n                                <div key={index} className={`table__pagination-item ${currPage === index ? 'active' : ''}`} onClick={() => selectPage(index)}>\n                                    {item + 1}\n                                </div>\n                            ))\n                        }\n                    </div>\n                ) : null\n            }\n        </div>\n    )\n}\n\nexport default Table\n","import React from 'react'\n\nimport './badge.css'\n\nconst Badge = props => {\n    return (\n        <span className={`badge badge-${props.type}`}>\n            {props.content}\n        </span>\n    )\n}\n\nexport default Badge\n","import React, {useEffect} from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport Chart from 'react-apexcharts'\n\nimport { useSelector } from 'react-redux'\n\nimport StatusCard from '../components/status-card/StatusCard'\n\nimport Table from '../components/table/Table'\n\nimport Badge from '../components/badge/Badge'\n\nimport statusCards from '../assets/JsonData/status-card-data.json'\n\nconst chartOptions = {\n    series: [{\n        name: 'Online Customers',\n        data: [40,70,20,90,36,80,30,91,60]\n    }, {\n        name: 'Store Customers',\n        data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10]\n    }],\n    options: {\n        color: ['#6ab04c', '#2980b9'],\n        chart: {\n            background: 'transparent'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth'\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\n        },\n        legend: {\n            position: 'top'\n        },\n        grid: {\n            show: false\n        }\n    }\n}\n\nconst topCustomers = {\n    head: [\n        'user',\n        'total orders',\n        'total spending'\n    ],\n    body: [\n        {\n            \"username\": \"john doe\",\n            \"order\": \"490\",\n            \"price\": \"$15,870\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"250\",\n            \"price\": \"$12,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"120\",\n            \"price\": \"$10,840\"\n        },\n        {\n            \"username\": \"frank iva\",\n            \"order\": \"110\",\n            \"price\": \"$9,251\"\n        },\n        {\n            \"username\": \"anthony baker\",\n            \"order\": \"80\",\n            \"price\": \"$8,840\"\n        }\n    ]\n}\n\nconst renderCusomerHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderCusomerBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.username}</td>\n        <td>{item.order}</td>\n        <td>{item.price}</td>\n    </tr>\n)\n\nconst latestOrders = {\n    header: [\n        \"order id\",\n        \"user\",\n        \"total price\",\n        \"date\",\n        \"status\"\n    ],\n    body: [\n        {\n            id: \"#OD1711\",\n            user: \"john doe\",\n            date: \"17 Jun 2021\",\n            price: \"$900\",\n            status: \"shipping\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"pending\"\n        },\n        {\n            id: \"#OD1712\",\n            user: \"frank iva\",\n            date: \"1 Jun 2021\",\n            price: \"$400\",\n            status: \"paid\"\n        },\n        {\n            id: \"#OD1713\",\n            user: \"anthony baker\",\n            date: \"27 Jun 2021\",\n            price: \"$200\",\n            status: \"refund\"\n        }\n    ]\n}\n\nconst orderStatus = {\n    \"shipping\": \"primary\",\n    \"pending\": \"warning\",\n    \"paid\": \"success\",\n    \"refund\": \"danger\"\n}\n\nconst renderOrderHead = (item, index) => (\n    <th key={index}>{item}</th>\n)\n\nconst renderOrderBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.id}</td>\n        <td>{item.user}</td>\n        <td>{item.price}</td>\n        <td>{item.date}</td>\n        <td>\n            <Badge type={orderStatus[item.status]} content={item.status}/>\n        </td>\n    </tr>\n)\n\nconst Dashboard = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\n\n    return (\n        <div>\n            <h2 className=\"page-header\">Dashboard</h2>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <div className=\"row\">\n                        {\n                            statusCards.map((item, index) => (\n                                <div className=\"col-6\" key={index}>\n                                    <StatusCard\n                                        icon={item.icon}\n                                        count={item.count}\n                                        title={item.title}\n                                    />\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <div className=\"col-6\">\n                    <div className=\"card full-height\">\n                        {/* chart */}\n                        <Chart\n                            options={themeReducer === 'theme-mode-dark' ? {\n                                ...chartOptions.options,\n                                theme: { mode: 'dark'}\n                            } : {\n                                ...chartOptions.options,\n                                theme: { mode: 'light'}\n                            }}\n                            series={chartOptions.series}\n                            type='line'\n                            height='100%'\n                        />\n                    </div>\n                </div>\n                <div className=\"col-4\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>top customers</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={topCustomers.head}\n                                renderHead={(item, index) => renderCusomerHead(item, index)}\n                                bodyData={topCustomers.body}\n                                renderBody={(item, index) => renderCusomerBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/admin-dashboard-demo/'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-8\">\n                    <div className=\"card\">\n                        <div className=\"card__header\">\n                            <h3>latest orders</h3>\n                        </div>\n                        <div className=\"card__body\">\n                            <Table\n                                headData={latestOrders.header}\n                                renderHead={(item, index) => renderOrderHead(item, index)}\n                                bodyData={latestOrders.body}\n                                renderBody={(item, index) => renderOrderBody(item, index)}\n                            />\n                        </div>\n                        <div className=\"card__footer\">\n                            <Link to='/admin-dashboard-demo/'>view all</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Dashboard\n","import React from 'react'\n\nimport Table from '../components/table/Table'\n\nimport customerList from '../assets/JsonData/customers-list.json'\n\nconst customerTableHead = [\n    '',\n    'name',\n    'email',\n    'phone',\n    'total orders',\n    'total spend',\n    'location'\n]\n\nconst renderHead = (item, index) => <th key={index}>{item}</th>\n\nconst renderBody = (item, index) => (\n    <tr key={index}>\n        <td>{item.id}</td>\n        <td>{item.name}</td>\n        <td>{item.email}</td>\n        <td>{item.phone}</td>\n        <td>{item.total_orders}</td>\n        <td>{item.total_spend}</td>\n        <td>{item.location}</td>\n    </tr>\n)\n\nconst Customers = () => {\n    return (\n        <div>\n            <h2 className=\"page-header\">\n                customers\n            </h2>\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card__body\">\n                            <Table\n                                limit='10'\n                                headData={customerTableHead}\n                                renderHead={(item, index) => renderHead(item, index)}\n                                bodyData={customerList}\n                                renderBody={(item, index) => renderBody(item, index)}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Customers\n","import React from 'react'\n\nimport { Route, Switch } from 'react-router-dom'\n\nimport Dashboard from '../pages/Dashboard'\nimport Customers from '../pages/Customers'\n\nconst Routes = () => {\n    return (\n        <Switch>\n            <Route path='/admin-dashboard-demo/' exact component={Dashboard}/>\n            <Route path='/admin-dashboard-demo/customers' component={Customers}/>\n        </Switch>\n    )\n}\n\nexport default Routes\n","import React, {useEffect} from 'react'\n\nimport './layout.css'\n\nimport Sidebar from '../sidebar/Sidebar'\nimport TopNav from '../topnav/TopNav'\nimport Routes from '../Routes'\n\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport ThemeAction from '../../redux/actions/ThemeAction'\n\nconst Layout = () => {\n\n    const themeReducer = useSelector(state => state.ThemeReducer)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        const themeClass = localStorage.getItem('themeMode', 'theme-mode-light')\n\n        const colorClass = localStorage.getItem('colorMode', 'theme-mode-light')\n\n        dispatch(ThemeAction.setMode(themeClass))\n\n        dispatch(ThemeAction.setColor(colorClass))\n    }, [dispatch])\n\n    return (\n        <BrowserRouter>\n            <Route render={(props) => (\n                <div className={`layout ${themeReducer.mode} ${themeReducer.color}`}>\n                    <Sidebar {...props}/>\n                    <div className=\"layout__content\">\n                        <TopNav/>\n                        <div className=\"layout__content-main\">\n                            <Routes/>\n                        </div>\n                    </div>\n                </div>\n            )}/>\n        </BrowserRouter>\n    )\n}\n\nexport default Layout\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals'\n\nimport { createStore } from 'redux'\n\nimport { Provider } from 'react-redux'\n\nimport rootReducer from './redux/reducers'\n\nimport './assets/boxicons-2.0.7/css/boxicons.min.css'\nimport './assets/css/grid.css'\nimport './assets/css/theme.css'\nimport './assets/css/index.css'\n\nimport Layout from './components/layout/Layout'\n\nconst store = createStore(\n  rootReducer\n)\n\ndocument.title = 'Emre Koç - Admin Dashboard Demo'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Layout />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}